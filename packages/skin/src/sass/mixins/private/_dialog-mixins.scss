@use "../public/utility-mixins";
@use "./token-mixins";
@use "../../variables/variables";

:root {
    --dialog-scrim-color-hide: rgb(17 24 32 / 0);
    --dialog-scrim-color-show: rgb(17 24 32 / 0.7);
    --dialog-lightbox-max-width: 616px;
}

@mixin base() {
    background-color: var(--dialog-scrim-color-show);
    bottom: 0;
    left: 0;
    -webkit-overflow-scrolling: touch;
    overflow-y: auto;
    position: fixed;
    right: 0;
    top: 0;
    will-change: background-color;
    z-index: 100000; /* because global header has an element with 99999 */

    &:not([hidden]) {
        display: flex;
    }
}

@mixin lightbox-base() {
    @include base;

    align-items: flex-start;
    justify-content: center;
}

@mixin window() {
    @include token-mixins.background-color-token(
        dialog-window-background-color,
        color-background-primary
    );

    display: flex;
    flex: 1 0 auto;
    flex-direction: column;
    min-height: 55px;
    will-change: opacity, transform;
}

// TODO deprecated, remove when we merge small and large
@mixin lightbox-window() {
    @include window;
    @include token-mixins.border-radius-token(
        lightbox-border-radius,
        border-radius-150
    );

    margin: auto auto 16px;
    max-height: 90%;
    max-width: calc(100% - 32px);
    min-width: 208px;
}

// This should become the new ligtbox-dialog-window mixin
// TODO refactor code to not to use calc and use spacing tokens instead
@mixin lightbox-window-centered() {
    @include window;
    @include token-mixins.border-radius-token(
        lightbox-border-radius,
        border-radius-100
    );

    margin: auto;
    max-height: 90%;
    max-width: calc(100% - 32px);
    min-width: 208px;
}

// TODO deprecated, remove when we merge small and large
@mixin lightbox-window-large() {
    margin: auto;
    @include token-mixins.border-radius-token(
        lightbox-border-radius,
        border-radius-100
    );
}

@mixin header-content($top-margin: var(--spacing-200)) {
    display: flex;
    /* Fix for Safari not honoring min-height */
    flex-shrink: 0;
    margin: $top-margin var(--spacing-200) 0;
    position: relative;

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        align-self: center;
        flex: 1 1 auto;
        margin: 0;
        overflow-wrap: anywhere;
    }

    & > :last-child:not(:only-child) {
        margin-inline-start: var(--spacing-200);
    }
}

@mixin body-content() {
    box-sizing: border-box;
    flex: 1 1 auto;
    padding: var(--spacing-200);
    position: relative;

    & > :first-child {
        margin-top: 0;
    }

    & > :last-child {
        margin-bottom: 0;
    }
}

@mixin footer-content() {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: var(--spacing-200);
    position: relative;

    & > :not(:first-child) {
        margin-top: var(--spacing-200);
    }
}

/* Unused, small and large are the same now */
@mixin header-content-large() {
    margin: var(--spacing-200) var(--spacing-200) 0;
}

/* Unused, small and large are the same now */
@mixin body-content-large() {
    margin: var(--spacing-200);
}

@mixin footer-content-large() {
    flex-direction: row;
    justify-content: flex-end;

    & > :not(:first-child) {
        margin-left: var(--spacing-100);
        margin-top: initial;
    }
}

@mixin animation($name) {
    .#{$name}--hide {
        &.#{$name}--mask-fade {
            transition: background-color var(--motion-duration-short-3)
                var(--motion-easing-continuous);
        }

        // Deprecated
        &.#{$name}--mask-fade-slow {
            transition: background-color var(--motion-duration-short-3)
                var(--motion-easing-continuous);
        }

        // Deprecated
        .#{$name}__window--fade {
            transition: opacity var(--motion-duration-short-3)
                var(--motion-easing-continuous);
        }

        .#{$name}__window--animate {
            transition:
                transform var(--motion-duration-medium-3)
                    var(--motion-easing-soft-exit),
                opacity var(--motion-duration-short-3)
                    var(--motion-easing-continuous);
        }

        /* Animation on content */
        .#{$name}__window--animate > * {
            transition: opacity var(--motion-duration-short-2)
                var(--motion-easing-continuous);
        }
    }

    .#{$name}--show {
        &.#{$name}--mask-fade {
            transition: background-color var(--motion-duration-short-3)
                var(--motion-easing-continuous);
        }

        // Deprecated
        &.#{$name}--mask-fade-slow {
            transition: background-color var(--motion-duration-short-3)
                var(--motion-easing-continuous);
        }

        // Deprecated
        .#{$name}__window--fade {
            transition: opacity var(--motion-duration-short-3)
                var(--motion-easing-continuous);
        }

        .#{$name}__window--animate {
            transition:
                transform var(--motion-duration-medium-3)
                    var(--motion-easing-standard),
                opacity var(--motion-duration-short-3)
                    var(--motion-easing-continuous);
        }

        /* Animation on content */
        .#{$name}__window--animate > * {
            transition: opacity var(--motion-duration-medium-2)
                var(--motion-easing-continuous) var(--motion-duration-short-3);
        }
    }

    .#{$name}--hide,
    .#{$name}--show-init {
        &.#{$name}--hide,
        &.#{$name}--show-init {
            display: flex;
        }

        &.#{$name}--mask-fade,
        // Deprecated
        &.#{$name}--mask-fade-slow {
            background-color: var(--dialog-scrim-color-hide);
        }

        // Deprecated
        .#{$name}__window--fade {
            opacity: 0;
        }

        .#{$name}__window--animate {
            opacity: 0;
        }

        .#{$name}__window--animate > * {
            opacity: 0;
        }
    }

    .#{$name}--show,
    .#{$name}--hide-init {
        &.#{$name}--show,
        &.#{$name}--hide-init {
            display: flex;
        }

        &.#{$name}--mask-fade,
        // Deprecated
        &.#{$name}--mask-fade-slow {
            background-color: var(--dialog-scrim-color-show);
        }

        // Deprecated
        .#{$name}__window--fade {
            opacity: 1;
        }

        .#{$name}__window--animate {
            opacity: 1;
        }

        .#{$name}__window--animate > * {
            opacity: 1;
        }
    }

    @media (prefers-reduced-motion) {
        .#{$name}--hide {
            &.#{$name}--mask-fade {
                transition: background-color var(--motion-duration-short-3)
                    var(--motion-easing-soft-exit);
            }

            // Deprecated
            &.#{$name}--mask-fade-slow {
                transition: background-color var(--motion-duration-short-3)
                    var(--motion-easing-soft-exit);
            }

            // Deprecated
            .#{$name}__window--fade {
                transition: opacity var(--motion-duration-short-3)
                    var(--motion-easing-soft-exit);
            }

            .#{$name}__window--animate {
                transition: opacity var(--motion-duration-short-3)
                    var(--motion-easing-soft-exit);
            }

            /* Animation on content */
            .#{$name}__window--animate > * {
                transition: opacity var(--motion-duration-short-2)
                    var(--motion-soft-exit);
            }
        }

        .#{$name}--show {
            &.#{$name}--mask-fade {
                transition: background-color var(--motion-duration-medium-2)
                    var(--motion-easing-soft-enter);
            }

            // Deprecated
            &.#{$name}--mask-fade-slow {
                transition: background-color var(--motion-duration-medium-2)
                    var(--motion-easing-soft-enter);
            }

            // Deprecated
            .#{$name}__window--fade {
                transition: opacity var(--motion-duration-medium-2)
                    var(--motion-easing-soft-enter);
            }

            .#{$name}__window--animate {
                transition: opacity var(--motion-duration-medium-2)
                    var(--motion-easing-soft-enter);
            }

            /* Animation on content */
            .#{$name}__window--animate > * {
                transition: opacity var(--motion-duration-medium-2)
                    var(--motion-easing-soft-enter)
                    var(--motion-duration-short-3);
            }
        }
    }
}

// When we merge large and small to always show centered, we can remove this mixin
@mixin animation-large($name) {
    .#{$name}--show .#{$name}__window--animate,
    .#{$name}--hide-init .#{$name}__window--animate {
        transform: scale(1);
    }

    .#{$name}--show-init .#{$name}__window--animate,
    .#{$name}--hide .#{$name}__window--animate {
        transform: scale(0.75);
    }

    @media (prefers-reduced-motion) {
        .#{$name}--show .#{$name}__window--animate,
        .#{$name}--hide-init .#{$name}__window--animate,
        .#{$name}--show-init .#{$name}__window--animate,
        .#{$name}--hide .#{$name}__window--animate {
            transform: scale(1);
        }
    }
}
