export interface Input {
    value?: string | number;
    charCount?: number;
    max?: number;
}
<const/{ max = 120 }=input>
<let/value=input.value>
<let/charCount=input.charCount>
<let/ariaLive=("" as Marko.AriaAttributes["aria-live"])>

<span class="field">
    <label class="field__label field__label--stacked" for="my-input">
        Field Label
    </label>
    <span class="field__control">
        <evo-textbox
            value:=value
            type="text"
            aria-describedby="my-input-charcount"
            class="textbox__control"
            id="my-input"
            aria-live=ariaLive
        />
    </span>
    <div class=[
        "field__description",
        "field__description--group",
        (charCount || 0) > max && "field__description--attention",
    ]>
        <evo-character-count
            id="my-input-charcount"
            count:=charCount
            value:=value
            ariaLiveChange(newAriaLive) {
                ariaLive = newAriaLive;
            }
            max=max
        >
            ${charCount} of ${max} (${max - (charCount || 0)} remaining)
        </evo-character-count>
    </div>
</span>
