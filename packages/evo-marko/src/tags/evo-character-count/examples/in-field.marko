export interface Input {
    value?: string | number;
    charCount?: number;
    max?: number;
    clippedText?: string;
}
<const/{ max = 120, clippedText }=input>
<let/value=input.value>
<let/charCount=input.charCount>
<let/ariaLive=("" as Marko.AriaAttributes["aria-live"])>

<span class="field">
    <label class="field__label field__label--stacked" for="my-input">
        Field Label
    </label>
    <span class="field__control">
        <evo-textbox
            value:=value
            type="text"
            aria-describedby="my-input-description my-input-charcount"
            class="textbox__control"
            id="my-input"
            aria-live=ariaLive/>
    </span>
    <div class="field__description field__description--group">
        <span id="my-input-description">
            Brief description
        </span>
        <evo-character-count
            id="my-input-charcount"
            count:=charCount
            value=value
            ariaLiveChange(newAriaLive) {
                ariaLive = newAriaLive;
            }
            max=max
            clippedText=clippedText/>
    </div>
</span>
